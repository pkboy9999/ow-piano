变量
{
	全局:
		0: Piano_Key
		1: Coordinate_Coefficient
		2: Step
		3: Music_Score_Right
		4: Beat_Right
		5: Music_Score_Left
		6: Beat_Left
		7: Music_Player
		8: Robot_Switch
		9: Filter_Right_Key

	玩家:
		0: Music_Score_Personal
		1: Beat_Personal
		2: Step_Personal
		3: Filter_Right_Key_Personal
}

规则("变量初始化")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Piano_Key) == 0;
	}

	动作
	{
		设置全局变量(Coordinate_Coefficient, 0);
		设置全局变量(Step, 0);
		设置全局变量(Piano_Key, 空数组);
		设置全局变量(Music_Score_Right, 空数组);
		设置全局变量(Beat_Right, 空数组);
		设置全局变量(Music_Player, 空数组);
		设置全局变量(Music_Score_Left, 空数组);
		设置全局变量(Beat_Left, 空数组);
		设置全局变量(Robot_Switch, 真);
		设置全局变量(Filter_Right_Key, 空数组);
		设置玩家变量(所有玩家(所有队伍), Music_Score_Personal, 空数组);
		设置玩家变量(所有玩家(所有队伍), Beat_Personal, 空数组);
		设置玩家变量(所有玩家(所有队伍), Filter_Right_Key_Personal, 空数组);
	}
}

规则("无限时间")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		设置比赛时间(3599);
		等待(3300, 无视条件);
		循环;
	}
}

规则("消散状态")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	动作
	{
		设置状态(所有玩家(所有队伍), 无, 消散, 9999);
	}
}

规则("初始化钢琴白键坐标A[7]")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Step) == 0;
	}

	动作
	{
		等待(0.016, 无视条件);
		修改全局变量(Piano_Key, 添加至数组, 矢量(加(-85.409, 乘(全局变量(Coordinate_Coefficient), 除(38.500, 1000))), 13.800, 加(-108.021, 乘(全局变量(
			Coordinate_Coefficient), 除(13.200, 1000)))));
		设置全局变量(Coordinate_Coefficient, 加(全局变量(Coordinate_Coefficient), 1));
		根据条件循环(比较(全局变量(Coordinate_Coefficient), <=, 37));
		设置全局变量(Step, 1);
	}
}

规则("初始化钢琴黑键坐标A[7]")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Step) == 1;
	}

	动作
	{
		根据条件跳过(比较(余数(减(全局变量(Coordinate_Coefficient), 37), 7), ==, 0), 2);
		根据条件跳过(比较(余数(减(全局变量(Coordinate_Coefficient), 37), 7), ==, 3), 1);
		修改全局变量(Piano_Key, 添加至数组, 矢量(加(-85.341, 乘(减(全局变量(Coordinate_Coefficient), 38), 除(38.358, 1000))), 13.820, 加(-108.149, 乘(减(全局变量(
			Coordinate_Coefficient), 38), 除(13.100, 1000)))));
		等待(0.016, 无视条件);
		设置全局变量(Coordinate_Coefficient, 加(全局变量(Coordinate_Coefficient), 1));
		根据条件循环(比较(全局变量(Coordinate_Coefficient), <=, 75));
		设置全局变量(Step, 2);
	}
}

规则("转换琴键排序")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Step) == 2;
	}

	动作
	{
		设置全局变量(Coordinate_Coefficient, 全局变量(Piano_Key));
		设置全局变量(Piano_Key, 空数组);
		在索引处设置全局变量(Piano_Key, 100, 0);
		修改全局变量(Piano_Key, 添加至数组, 添加至数组(数组分割(全局变量(Coordinate_Coefficient), 0, 7), 数组分割(全局变量(Coordinate_Coefficient), 38, 5)));
		在索引处设置全局变量(Piano_Key, 200, 0);
		修改全局变量(Piano_Key, 添加至数组, 添加至数组(数组分割(全局变量(Coordinate_Coefficient), 7, 7), 数组分割(全局变量(Coordinate_Coefficient), 43, 5)));
		在索引处设置全局变量(Piano_Key, 300, 0);
		修改全局变量(Piano_Key, 添加至数组, 添加至数组(数组分割(全局变量(Coordinate_Coefficient), 14, 7), 数组分割(全局变量(Coordinate_Coefficient), 48, 5)));
		在索引处设置全局变量(Piano_Key, 400, 0);
		修改全局变量(Piano_Key, 添加至数组, 添加至数组(数组分割(全局变量(Coordinate_Coefficient), 21, 7), 数组分割(全局变量(Coordinate_Coefficient), 53, 5)));
		在索引处设置全局变量(Piano_Key, 500, 0);
		修改全局变量(Piano_Key, 添加至数组, 添加至数组(数组分割(全局变量(Coordinate_Coefficient), 28, 7), 数组分割(全局变量(Coordinate_Coefficient), 58, 5)));
		在索引处设置全局变量(Piano_Key, 600, 0);
		修改全局变量(Piano_Key, 添加至数组, 添加至数组(添加至数组(数组分割(全局变量(Coordinate_Coefficient), 35, 3), 添加至数组(添加至数组(添加至数组(0, 0), 0), 0)), 数组分割(全局变量(
			Coordinate_Coefficient), 63, 2)));
		设置全局变量(Coordinate_Coefficient, 0);
		设置全局变量(Step, 3);
	}
}

规则("加入CP")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		位置 0;
	}

	条件
	{
		全局变量(Music_Player) == 空数组;
		全局变量(Robot_Switch) == 真;
		按钮被按下(事件玩家, 终极技能) == 真;
	}

	动作
	{
		生成机器人(英雄(源氏), 队伍1, 4, 矢量(-85.135, 13.515, -107.497), 矢量(0.190, -0.810, -0.560));
		生成机器人(英雄(秩序之光), 队伍1, 5, 矢量(-84.331, 13.515, -107.226), 矢量(-84.487, 14.963, -107.276));
		设置全局变量(Music_Player, 添加至数组(全局变量(Music_Player), 此位置的玩家(4, 队伍1)));
		设置全局变量(Music_Player, 添加至数组(全局变量(Music_Player), 此位置的玩家(5, 队伍1)));
		等待(1.500, 无视条件);
		设置全局变量(Robot_Switch, 假);
	}
}

规则("移除CP")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		全局变量(Music_Player) != 空数组;
		全局变量(Robot_Switch) == 假;
		按钮被按下(事件玩家, 终极技能) == 真;
	}

	动作
	{
		设置玩家变量(所有玩家(所有队伍), Music_Score_Personal, 空数组);
		设置玩家变量(所有玩家(所有队伍), Beat_Personal, 空数组);
		移除机器人(队伍1, 4);
		移除机器人(队伍1, 5);
		设置全局变量(Music_Player, 空数组);
		等待(1.500, 无视条件);
		设置全局变量(Robot_Switch, 真);
	}
}

规则("开始演奏[天使]")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		位置 0;
	}

	条件
	{
		全局变量(Step) == 100;
		按钮被按下(事件玩家, 技能2) == 真;
		全局变量(Music_Player) != 空数组;
	}

	动作
	{
		设置全局变量(Step, 101);
		设置玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal, 全局变量(Music_Score_Right));
		设置玩家变量(数组中的值(全局变量(Music_Player), 1), Beat_Personal, 全局变量(Beat_Right));
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 0), ==, 0), 1);
		开始朝向(数组中的值(全局变量(Music_Player), 1), 向量(眼睛位置(数组中的值(全局变量(Music_Player), 1)), 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(
			Music_Player), 1), Music_Score_Personal), 0))), 300, 至地图, 无);
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 0), !=, 0), 1);
		开始朝向(数组中的值(全局变量(Music_Player), 1), 向量(眼睛位置(数组中的值(全局变量(Music_Player), 1)), 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(
			Music_Player), 1), Music_Score_Personal), 1))), 300, 至地图, 无);
		等待(3, 无视条件);
		停止朝向(数组中的值(全局变量(Music_Player), 1));
		设置全局变量(Step, 102);
	}
}

规则("演奏循环[天使]")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		位置 0;
	}

	条件
	{
		全局变量(Step) == 102;
	}

	动作
	{
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal)), !=,
			0), 1);
		停止朝向(数组中的值(全局变量(Music_Player), 1));
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal)), ==,
			0), 1);
		开始朝向(数组中的值(全局变量(Music_Player), 1), 向量(眼睛位置(数组中的值(全局变量(Music_Player), 1)), 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(
			Music_Player), 1), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal)))), 500, 至地图, 方向及角速率);
		等待(乘(0.100, 数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Beat_Personal), 减(玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal), 1))),
			无视条件);
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal)), ==,
			0), 3);
		按下按键(数组中的值(全局变量(Music_Player), 1), 主要攻击模式);
		按下按键(数组中的值(全局变量(Music_Player), 1), 主要攻击模式);
		按下按键(数组中的值(全局变量(Music_Player), 1), 主要攻击模式);
		设置玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal, 加(玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal), 1));
		根据条件循环(比较(玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal), <, 70));
		停止朝向(数组中的值(全局变量(Music_Player), 1));
		等待(3, 无视条件);
		设置玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal, 空数组);
		设置玩家变量(数组中的值(全局变量(Music_Player), 1), Beat_Personal, 空数组);
		设置玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal, 空数组);
		设置全局变量(Step, 100);
	}
}

规则("开始演奏[源氏]")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		位置 0;
	}

	条件
	{
		全局变量(Step) == 101;
	}

	动作
	{
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal, 全局变量(Music_Score_Left));
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Beat_Personal, 全局变量(Beat_Left));
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Filter_Right_Key_Personal, 全局变量(Filter_Right_Key));
		开始按下按钮(数组中的值(全局变量(Music_Player), 0), 蹲下);
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 0), ==, 0), 1);
		开始朝向(数组中的值(全局变量(Music_Player), 0), 向量(眼睛位置(数组中的值(全局变量(Music_Player), 0)), 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(
			Music_Player), 0), Music_Score_Personal), 0))), 300, 至地图, 无);
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 0), !=, 0), 1);
		开始朝向(数组中的值(全局变量(Music_Player), 0), 向量(眼睛位置(数组中的值(全局变量(Music_Player), 0)), 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(
			Music_Player), 0), Music_Score_Personal), 1))), 300, 至地图, 无);
		等待(3, 无视条件);
		停止朝向(数组中的值(全局变量(Music_Player), 0));
	}
}

规则("演奏循环[源氏]")
{
	事件
	{
		持续 - 每名玩家;
		队伍1;
		位置 0;
	}

	条件
	{
		全局变量(Step) == 102;
	}

	动作
	{
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal)), !=,
			0), 1);
		停止朝向(数组中的值(全局变量(Music_Player), 0));
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal)), ==,
			0), 1);
		开始朝向(数组中的值(全局变量(Music_Player), 0), 向量(眼睛位置(数组中的值(全局变量(Music_Player), 0)), 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(
			Music_Player), 0), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal)))), 500, 至地图, 方向及角速率);
		等待(乘(0.100, 数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Beat_Personal), 减(玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal), 1))),
			无视条件);
		根据条件跳过(数组包含(玩家变量(数组中的值(全局变量(Music_Player), 0), Filter_Right_Key_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal)), 4);
		根据条件跳过(比较(数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal)), ==,
			0), 3);
		按下按键(数组中的值(全局变量(Music_Player), 0), 技能1);
		按下按键(数组中的值(全局变量(Music_Player), 0), 技能1);
		按下按键(数组中的值(全局变量(Music_Player), 0), 技能1);
		根据条件跳过(非(数组包含(玩家变量(数组中的值(全局变量(Music_Player), 0), Filter_Right_Key_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal))),
			3);
		按下按键(数组中的值(全局变量(Music_Player), 0), 辅助攻击模式);
		按下按键(数组中的值(全局变量(Music_Player), 0), 辅助攻击模式);
		按下按键(数组中的值(全局变量(Music_Player), 0), 辅助攻击模式);
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal, 加(玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal), 1));
		根据条件循环(比较(玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal), <, 40));
		停止朝向(数组中的值(全局变量(Music_Player), 0));
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal, 空数组);
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Beat_Personal, 空数组);
		设置玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal, 空数组);
	}
}

规则("写入乐谱[天使]")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Step) == 3;
	}

	动作
	{
		设置全局变量(Music_Score_Right, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			全局变量(Music_Score_Right), 0), 501), 501), 407), 407), 501), 501), 407), 407), 501), 501), 407), 407), 501), 407), 501), 503));
		设置全局变量(Beat_Right, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(
			Beat_Right), 4), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 4), 14), 2));
		设置全局变量(Music_Score_Right, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(Music_Score_Right), 503), 503),
			506), 506), 506), 502), 502), 505), 503), 503), 503), 503), 503), 503), 502), 501), 501), 502), 502), 503), 503), 503), 503),
			503), 506), 506), 506), 502), 502), 502), 505), 502), 502), 502), 501), 502), 502), 502), 502), 502), 503), 505), 502), 502),
			502), 501), 502), 503), 502), 503), 502), 501), 406));
		设置全局变量(Beat_Right, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(Beat_Right), 2), 6), 4), 2), 2), 4),
			2), 8), 2), 2), 2), 2), 2), 2), 2), 2), 2), 4), 2), 6), 4), 2), 2), 2), 4), 4), 2), 2), 2), 2), 8), 2), 2), 2), 2), 6), 4), 2),
			2), 2), 6), 4), 2), 2), 2), 2), 2), 16), 2), 4), 4), 2), 24));
		设置全局变量(Step, 4);
	}
}

规则("写入乐谱[源氏]")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Step) == 4;
	}

	动作
	{
		设置全局变量(Music_Score_Left, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(
			Music_Score_Left), 206), 206), 203), 203), 206), 206), 203), 203), 209), 202), 202), 203), 203), 206), 203), 206));
		设置全局变量(Beat_Left, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(Beat_Left),
			8), 8), 8), 8), 8), 8), 8), 4), 4), 8), 8), 8), 8), 8), 8), 16));
		设置全局变量(Music_Score_Left, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(Music_Score_Left), 206), 301), 203), 205), 206), 301), 203), 205), 206), 301),
			203), 205), 206), 301), 203), 205), 202), 204), 203), 205), 206), 203), 205), 206));
		设置全局变量(Beat_Left, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(
			添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(Beat_Left), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8), 8),
			8), 8), 8), 4), 4), 16));
		设置全局变量(Step, 5);
	}
}

规则("标记右键[源氏]")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局变量(Step) == 5;
	}

	动作
	{
		设置全局变量(Filter_Right_Key, 添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(添加至数组(全局变量(Piano_Key), 8), 17), 19),
			21), 23), 25), 27), 29), 31), 33), 35), 42));
		设置全局变量(Step, 100);
	}
}

禁用 规则("HUD")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	动作
	{
		创建HUD文本(事件玩家, 玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal), 无, 无, 左边, 1, 红色, 红色, 红色, 可见和字符串, 始终可见);
		创建HUD文本(事件玩家, 数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 1), Step_Personal)),
			无, 无, 左边, 2, 红色, 白色, 白色, 可见和字符串, 始终可见);
		创建HUD文本(事件玩家, 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 1), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player),
			1), Step_Personal))), 无, 无, 左边, 3, 红色, 白色, 白色, 可见和字符串, 始终可见);
		创建HUD文本(事件玩家, 面朝方向(数组中的值(全局变量(Music_Player), 0)), 无, 无, 左边, 7, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 乘(100, 所选位置(数组中的值(全局变量(Music_Player), 0))), 无, 无, 左边, 8, 白色, 白色, 白色, 可见和字符串, 默认可见度);
		创建HUD文本(事件玩家, 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal), 无, 无, 左边, 4, 蓝色, 红色, 红色, 可见和字符串, 始终可见);
		创建HUD文本(事件玩家, 数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player), 0), Step_Personal)),
			无, 无, 左边, 5, 蓝色, 白色, 白色, 可见和字符串, 始终可见);
		创建HUD文本(事件玩家, 数组中的值(全局变量(Piano_Key), 数组中的值(玩家变量(数组中的值(全局变量(Music_Player), 0), Music_Score_Personal), 玩家变量(数组中的值(全局变量(Music_Player),
			0), Step_Personal))), 无, 无, 左边, 6, 蓝色, 白色, 白色, 可见和字符串, 始终可见);
	}
}